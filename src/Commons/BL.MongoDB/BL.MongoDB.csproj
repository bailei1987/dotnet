<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<TargetFrameworks>net6.0;net5.0;netcoreapp3.1;netstandard2.1</TargetFrameworks>
		<PackageVersion>6.0.7</PackageVersion>
		<Version>6.0.7</Version>
		<Authors>bl(315297830@qq.com)</Authors>
		<Copyright>copyright@2020 bl</Copyright>
		<Owners>bl(315297830@qq.com)</Owners>
		<PackageReleaseNotes>add decimal convert to store decimal use decimal in db</PackageReleaseNotes>
		<Summary>Sample mongodb connection helper.Use this package in Infrasetructure layer,you dont need install MongoDB.Driver on Domain layer again.</Summary>
		<Title>Sample mongodb connection helper</Title>
		<Description>
			A sample useful MongoDB Driver Helper.Only rely MongoDB.Driver.Include function below:
			1.BaseDbContext.cs:you can create your DbContext inherit BaseDbContext
			package some useful mongodb-to-C# mapping,like ObjectId&lt;=&gt;string,UTC&lt;=&gt;LocalTime,Enum&lt;=&gt;string,property name to camel field..etc
			2.can get ConnetionString from env "CONNECTIONSTRINGS_MONGO" in docker container or "ConnectionStrings.Mongo" in appsettings.json:
			3.BsonDocumentExtends.cs:
			extend method to BsonValue,for example: var bs={info:{gender:{k:'01',v:'Man'}}} . we can get "Man" through bs.GetValueByHierarchicalNames("info.gender.v")
			4.you can simply using BL.MongoDB.Gen's AddBLMongoDbContext method in ConfigureServices(startup.cs) to create your DbContext
			5.example.api have some simple code for refering
		</Description>
		<PackageProjectUrl>https://github.com/bailei1987/dotnet</PackageProjectUrl>
		<LangVersion>latest</LangVersion>
	</PropertyGroup>
	<ItemGroup>
		<PackageReference Include="MongoDB.Driver" Version="2.13.1" />
	</ItemGroup>
</Project>